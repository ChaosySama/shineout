(window.webpackJsonpShineoutDoc=window.webpackJsonpShineoutDoc||[]).push([[19],{1509:function(e,t,n){"use strict";n.r(t);var i=n(0),r=n.n(i),a=n(547),o=n(548),l=n(35),c=n(1510),s=n.n(c),m=n(1511),d=n.n(m),u=Object(l.b)(s.a,d.a),p=[{name:"1-base",title:Object(l.b)("基本用法 \n 默认为水平分割线","Base \n Divider is horizontal by default. You can add text within Divider."),component:n(1512).default,rawText:n(1513)},{name:"2-base",title:Object(l.b)("带文字的分割线 \n 分割线中带有文字，可以用 orientation 指定文字位置。",'Divider with title \n Divider with inner title, set orientation="left/right" to align it.'),component:n(1514).default,rawText:n(1515)},{name:"3-base",title:Object(l.b)('垂直分割线 \n 使用 mode="vertical" 设置为行内的垂直分割线。','Vertical \n Use type="vertical" make it vertical.'),component:n(1516).default,rawText:n(1517)}];t.default=Object(a.a)(function(e){return r.a.createElement(o.b,Object.assign({},e,{codes:void 0,source:u,examples:p}))})},1510:function(e,t){e.exports="# Divider 分割线\n\n<example />\n\n## API\n\n| 属性 | 类型 | 默认值 | 说明 |\n| --- | --- | --- | --- |\n| children | ReactNode | 无 | 分割线中内容 |\n| className | string | 无 | 扩展className |\n| style | object | 无 | 最外层扩展样式 |\n| mode | 'horizontal' \\| 'vertical' | *horizontal* | 方向，水平或垂直  |\n| orientation | 'center' \\| 'left' \\| 'right' | *center* |  分割线中内容的位置 |\n"},1511:function(e,t){e.exports="# Divider\n\n<example />\n\n## API\n\n| Property | Type | Default | Description |\n| --- | --- | --- | --- |\n| children | ReactNode | - | Content, text or react component|\n| className | string | - | Extend className |\n| style | object | - | Container element style |\n| mode | 'horizontal' \\| 'vertical' | *horizontal* |  mode of divider |\n| orientation | 'center' \\| 'left' \\| 'right' | *center* |  The position of title inside divider |"},1512:function(e,t,n){"use strict";n.r(t);var i=n(0),r=n.n(i),a=n(304),o=n(553);t.default=function(){return r.a.createElement("div",null,r.a.createElement("p",null,Object(o.a)(1)),r.a.createElement(a.a,null),r.a.createElement("p",null,Object(o.a)(3)),r.a.createElement(a.a,null),r.a.createElement("p",null,Object(o.a)(5)))}},1513:function(e,t){e.exports="/**\n * cn - 基本用法\n *  --默认为水平分割线\n * en - Base\n *  --Divider is horizontal by default. You can add text within Divider.\n */\nimport React from 'react'\nimport { Divider } from 'shineout'\nimport lorem from 'doc/utils/faker/lorem'\n\nexport default function() {\n  return (\n    <div>\n      <p>{lorem(1)}</p>\n      <Divider />\n      <p>{lorem(3)}</p>\n      <Divider />\n      <p>{lorem(5)}</p>\n    </div>\n  )\n}\n"},1514:function(e,t,n){"use strict";n.r(t);var i=n(0),r=n.n(i),a=n(304),o=n(553);t.default=function(){return r.a.createElement("div",null,r.a.createElement("p",null,Object(o.a)(1)),r.a.createElement(a.a,null,"Text"),r.a.createElement("p",null,Object(o.a)(3)),r.a.createElement(a.a,{orientation:"left"},"Left Text"),r.a.createElement("p",null,Object(o.a)(4)),r.a.createElement(a.a,{orientation:"right"},"Right Text"),r.a.createElement("p",null,Object(o.a)(5)))}},1515:function(e,t){e.exports="/**\n * cn - 带文字的分割线\n *   -- 分割线中带有文字，可以用 orientation 指定文字位置。\n * en - Divider with title\n *  --Divider with inner title, set orientation=\"left/right\" to align it.\n */\nimport React from 'react'\nimport { Divider } from 'shineout'\nimport lorem from 'doc/utils/faker/lorem'\n\nexport default function() {\n  return (\n    <div>\n      <p>{lorem(1)}</p>\n      <Divider>Text</Divider>\n      <p>{lorem(3)}</p>\n      <Divider orientation=\"left\">Left Text</Divider>\n      <p>{lorem(4)}</p>\n      <Divider orientation=\"right\">Right Text</Divider>\n      <p>{lorem(5)}</p>\n    </div>\n  )\n}\n"},1516:function(e,t,n){"use strict";n.r(t);var i=n(0),r=n.n(i),a=n(304);t.default=function(){return r.a.createElement("div",null,r.a.createElement("span",null,"Left"),r.a.createElement(a.a,{mode:"vertical"},"H"),r.a.createElement("span",null,"Center"),r.a.createElement(a.a,{mode:"vertical"}),r.a.createElement("span",null,"Right"))}},1517:function(e,t){e.exports='/**\n * cn - 垂直分割线\n *   -- 使用 mode="vertical" 设置为行内的垂直分割线。\n * en - Vertical\n *  --  Use type="vertical" make it vertical.\n */\nimport React from \'react\'\nimport { Divider } from \'shineout\'\n\nexport default function() {\n  return (\n    <div>\n      <span>Left</span>\n      <Divider mode="vertical">H</Divider>\n      <span>Center</span>\n      <Divider mode="vertical" />\n      <span>Right</span>\n    </div>\n  )\n}\n'},304:function(e,t,n){"use strict";var l=n(13),i=n(5),r=n(6),a=n(7),o=n(4),c=n(8),s=n(0),m=n.n(s),d=n(15),u=n.n(d),p=n(2),v=function(e){function t(){return Object(i.a)(this,t),Object(a.a)(this,Object(o.a)(t).apply(this,arguments))}return Object(c.a)(t,e),Object(r.a)(t,[{key:"showText",value:function(){var e=this.props,t=e.children,n=e.mode;return t&&"horizontal"===n}},{key:"render",value:function(){var e=this.props,t=e.className,n=e.children,i=e.mode,r=e.orientation,a=Object(l.a)(e,["className","children","mode","orientation"]),o=u()(Object(p.j)("_",i,n&&"with-text",r&&"with-text-".concat(r)),t);return m.a.createElement("div",Object.assign({},a,{className:o}),this.showText()&&m.a.createElement("span",{className:Object(p.j)("inner-text")},n))}}]),t}(s.PureComponent);v.defaultProps={mode:"horizontal"},t.a=v}}]);